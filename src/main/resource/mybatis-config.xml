<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <properties resource="dbconfig.properties"></properties>

    <settings>
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <setting name="lazyLoadingEnabled" value="true"/>
        <setting name="aggressiveLazyLoading" value="false"/>
        <!-- 开启二级缓存 -->
        <setting name="cacheEnabled" value="false"/>
        <setting name="localCacheScope" value="STATEMENT"/>
    </settings>

    <!--注意别名不区分大小写-->
    <typeAliases>
        <!--为这个包下以及子包名下 起默认的别名  默认是类名小写 -->
        <package name="com.hjj.www.po"/>
    </typeAliases>

    <!--
        environments:可以配置多个环境    开发  测试  生产....  default指定使用的环境
        environment：
            id:  环境的唯一标识 development  test  product
            transactionManager: 事务管理器   两种事务管理器：
                                JDBC(JdbcTransactionFactory)
                                MANAGED(ManagedTransactionFactory)
                                这里会被spring代替掉
                                自定义事务管理器 实现TransactionFactory即可
            dataSource: 数据源的类型  可以取的值
                        UNPOOLED：每次创建新的连接，不使用连接池  UnpooledDataSourceFactory
                         POOLED:使用连接池  PooledDataSourceFactory
                         JNDI: JndiDataSourceFactory
                         自定义数据源 实现DataSourceFactory即可  type:全类名
    -->
    <environments default="development">
        <environment id="test">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>

        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>
    </environments>

    <!--

    Type:DB_VENDOR 使用mybatis提供的VendorDatabaseIdProvider解析数据库厂商的标识，也可以实现DatabaseIdProvider来自定义
        name  数据库厂商标识
        value  数据厂商标识的的别名，方便Sql语句使用databaseId属性引用
    -->
    <databaseIdProvider type="DB_VENDOR">
        <property name="MySQL" value="mysql"/>
        <property name="Oracle" value="oracle"/>
        <property name="SQL Server" value="sqlserver"/>
    </databaseIdProvider>
    <mappers>
        <mapper resource="mapper/UserMapper.xml"/>
        <mapper resource="mapper/DepartmentMapper.xml"/>
        <mapper resource="mapper/UserDymaicMapper.xml"/>
    </mappers>

</configuration>
